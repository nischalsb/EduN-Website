AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Educate Nepal Initiative Backend

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        NODE_ENV: !Ref Environment
        LOG_LEVEL: !If [IsProduction, 'WARN', 'DEBUG']
    Tags:
      Project: EducateNepal
      Environment: !Ref Environment

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, production]
    Description: Deployment environment

Resources:
  # DynamoDB Tables
  DonationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Environment}-educate-nepal-donations"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: donorEmail
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: DonorEmailIndex
          KeySchema:
            - AttributeName: donorEmail
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: CreatedAtIndex
          KeySchema:
            - AttributeName: createdAt
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  # API Gateway
  ApiGatewayApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref Environment
      CorsConfiguration:
        AllowOrigins:
          - !If [IsProduction, 'https://educatenepal.org', 'http://localhost:3000']
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS

  # Lambda Functions
  CreateDonationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/donations/
      Handler: handler.createDonation
      Description: Handles donation creation
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DonationsTable
      Environment:
        Variables:
          DONATIONS_TABLE: !Ref DonationsTable
          KHALTI_SECRET_KEY: !Sub '{{resolve:secretsmanager:${Environment}/educate-nepal/khalti:SecretString:secretKey}}'
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /donations
            Method: POST
            ApiId: !Ref ApiGatewayApi

  # Contact Form Function
  ContactFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/contact/
      Handler: handler.contactHandler
      Description: Handles contact form submissions
      Environment:
        Variables:
          CONTACT_TABLE: !Ref ContactTable
          NOTIFICATION_EMAIL: !Ref NotificationEmail
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /contact
            Method: POST
            ApiId: !Ref ApiGatewayApi

  # Outputs
Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/"
  
  DonationsTableName:
    Description: "Donations Table Name"
    Value: !Ref DonationsTable
